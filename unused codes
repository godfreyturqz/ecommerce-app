function productListRequest(){
    return {
        type: 'PRODUCT_LIST_REQUEST'
    }
}
function productListSuccess(data){
    return {
        type: 'PRODUCT_LIST_SUCCESS',
        payload: data
    }
}
function productListFail(error){
    return {
        type: 'PRODUCT_LIST_FAIL',
        payload:error
    }
}
//getProductList
export function getProductList(){
    dispatch({type: 'PRODUCT_LIST_REQUEST'})
    return async function(dispatch){
        try {
            const {data} = await axios.get('/api/products')
            dispatch({type: 'PRODUCT_LIST_SUCCESS', payload: data})
        } catch (error) {
            dispatch({type: 'PRODUCT_LIST_FAIL', payload: error.message})
        }
    }
}
//getting product list
axios.get('/api/products')
    .then(res =>{
        dispatch(productListSuccess(res.data))
    })
    .catch(error => {
        dispatch(productListFail(error.message))
    })


function productDetailsRequest(productId){
    return {
        type: 'PRODUCT_DETAILS_REQUEST',
        payload: productId
    }
}
function productDetailsSuccess(data){
    return {
        type: 'PRODUCT_DETAILS_SUCCESS',
        payload: data
    }
}
function productDetailsFail(error){
    return {
        type: 'PRODUCT_DETAILS_FAIL',
        payload: error
    }
}
axios.get('/api/products/' + productId)
    .then(res =>{
        dispatch(productDetailsSuccess(res.data))
    })
    .catch(error => {
        dispatch(productDetailsFail(error.message))
    })

// server post request
ProductModel.create(req.body)
    .then(data => res.send(data))
    .catch(error => res.send(error))

    "heroku-postbuild": "NPM_CONFIG_PRODUCTION = false yarn install --prefix client && yarn build --prefix client"